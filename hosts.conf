# The Gigablast host configuration file.
# Tells us what hosts are participating in the distributed search engine.


# the working directory for the gb process:

working-dir: /home/mwells/github/



# This is how many pieces you want the index split into.
# So if you have 64 machines, and you want a unique piece of index on
# each machine, then make this 64. But if you have 64 machines and you
# want one level of redundancy then make this 32.

index-splits: 1



# List of hosts. Limited to 512 from MAX_HOSTS in Hostdb.h. Increase that
# if you want more.
#
# Format:
#
# first   column: hostID (starts at 0 and increments from there)
# second  column: the port used by the client DNS algorithms
# third   column: port that HTTPS listens on
# fourth  column: port that HTTP  listens on
# fifth   column: port that udp server listens on
# sixth   column: IP address or hostname that has an IP address in /etc/hosts
# seventh column: like sixth column but for secondary ethernet port. (optional)


# By default just use the local host as the single host.
# The client DNS uses port 6000, https listens on 7000, http listens on port
# 8000 and the udp server listens on port 9000.
#
# Use './gb N' to run the gb process as host #N where N is 0 to run as
# the first host in the list below. 
#
# Use './gb start N' to use passwordless ssh to ssh to that Nth machine
# listed below and start the process. Use must have private/public keys
# for the required passwordless ssh.
#
# Use './gb kstart N' to run the Nth host in a bash keep-alive loop. So if it
# cores it will restart. It will send out an email alert if it restarts.
#
0 6000 7000 8000 9000 127.0.0.1



#
# Example of a four-node distributed search index:
#
# Use './gb 2' to run as the host on IP 1.2.3.8 for example.
#
#0 6000 7000 8000 9000 1.2.3.4  1.2.3.5
#1 6000 7000 8000 9000 1.2.3.6  1.2.3.7
#2 6000 7000 8000 9000 1.2.3.8  1.2.3.9
#3 6000 7000 8000 9000 1.2.3.10 1.2.3.11



#
# Example of an eight-node cluster.
# Each line represents a single gb process with dual ethernet ports
# whose IP addresses are in /etc/hosts under se0, se0b, se1, se1b, ...
#
#0 6000 7000 8000 9000 se0 se0b
#1 6000 7000 8000 9000 se1 se1b
#2 6000 7000 8000 9000 se2 se2b
#3 6000 7000 8000 9000 se3 se3b
#4 6000 7000 8000 9000 se4 se4b
#5 6000 7000 8000 9000 se5 se5b
#6 6000 7000 8000 9000 se6 se6b
#7 6000 7000 8000 9000 se7 se7b


# Proxies
# Proxies handle the incoming search request and load balance it to 
# one of the hosts listed above. If you only have one host in your search
# engine then you probably do not really need the proxy. You need to make
# sure all shard hosts and all proxies have the same hosts.conf because
# they ping each other to ensure they are up.
#
# To start a proxy you can run './gb proxy load 0' to start the first
# proxy in your list. Use './gb proxy load 1' to start the second proxy, etc.
#
# Use './gb proxy start N' to start the Nth proxy, where N starts at 0,
# mentioned in the proxy list below. You need to enable passwordless ssh
# using private/public keys for that to work. 
#
# Use './gb proxy kstart N' to start the Nth proxy in a keep-alive loop using
# the bash shell. So if it cores it will restart and send you an email alert.
#
# Format:
# First  column is "proxy" and followed by the standard columns described above
#
# Example:
# A proxy will be running on 10.5.66.18:
#proxy 6001 7001 8001 9001 10.5.66.18
